//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/InputSystem/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""MainCombatMap"",
            ""id"": ""0ce93b33-8480-4dff-b756-3bea99412ecc"",
            ""actions"": [
                {
                    ""name"": ""CursorPosition"",
                    ""type"": ""Value"",
                    ""id"": ""e3840a3e-d75e-41ac-b72c-4629c26c3451"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CursorDelta"",
                    ""type"": ""Value"",
                    ""id"": ""b485724e-f3db-4bbf-9c9f-74d1583850c5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CursorMovement"",
                    ""type"": ""Value"",
                    ""id"": ""edbba1b9-1eda-4cdd-b0c8-330d6f9de025"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraMovement"",
                    ""type"": ""Value"",
                    ""id"": ""545e2713-4829-41be-8fce-f7671c20fe63"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ConfirmAction"",
                    ""type"": ""Button"",
                    ""id"": ""82d325a9-258e-44cb-bfaf-d41840d2522c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelAction"",
                    ""type"": ""Button"",
                    ""id"": ""46dd3650-75ae-45e5-ada1-920afd757e22"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraDisplaceButton"",
                    ""type"": ""Button"",
                    ""id"": ""2cadcf42-934c-4501-a219-ecd17e2ec625"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f9f9c87d-7b11-41e4-b814-994ac34054a7"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""faa543b9-71fa-4052-b577-119670340d91"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e00efd5-18ef-468a-b535-325514cada7a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ba0a5ba-bdc4-4aa2-ae60-37bd66461740"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88834e14-13d6-447b-b57c-740cd7483447"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7636d959-c4b9-41ae-b3df-14a0cb87faa3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2ca17601-8f1c-4c6c-a12f-a4f6d01630f4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6db415e2-e77f-4560-bba6-733ba75b889a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""66542ea9-0e94-4308-9b73-046e9c6f593d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b66845e1-aa4c-4c64-abad-aa4cab63f71a"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a22b2ca4-b805-48aa-b5a5-9da4946bb291"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f5b79f7-2427-469f-bb6a-2e020352019f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConfirmAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f5478cc-f75d-4805-a58d-d73e35635e6f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConfirmAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1456b69a-9174-4b76-b0a9-0d91484b8d65"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraDisplaceButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69b0c5ff-40ed-4f5d-ae11-a4c7612798f4"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraDisplaceButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0118a6e1-f2b0-41fb-afd5-f0886f02d660"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec5bbd18-0e92-42ff-a1de-62b9f083170f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""New action map"",
            ""id"": ""f46b9c42-bdfd-4010-8b93-046e82e406df"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""0255c81c-8594-4c71-b825-8dd8058d8dc3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6e195c13-74fb-4650-809c-9e16bc58bb21"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MainCombatMap
        m_MainCombatMap = asset.FindActionMap("MainCombatMap", throwIfNotFound: true);
        m_MainCombatMap_CursorPosition = m_MainCombatMap.FindAction("CursorPosition", throwIfNotFound: true);
        m_MainCombatMap_CursorDelta = m_MainCombatMap.FindAction("CursorDelta", throwIfNotFound: true);
        m_MainCombatMap_CursorMovement = m_MainCombatMap.FindAction("CursorMovement", throwIfNotFound: true);
        m_MainCombatMap_CameraMovement = m_MainCombatMap.FindAction("CameraMovement", throwIfNotFound: true);
        m_MainCombatMap_ConfirmAction = m_MainCombatMap.FindAction("ConfirmAction", throwIfNotFound: true);
        m_MainCombatMap_CancelAction = m_MainCombatMap.FindAction("CancelAction", throwIfNotFound: true);
        m_MainCombatMap_CameraDisplaceButton = m_MainCombatMap.FindAction("CameraDisplaceButton", throwIfNotFound: true);
        // New action map
        m_Newactionmap = asset.FindActionMap("New action map", throwIfNotFound: true);
        m_Newactionmap_Newaction = m_Newactionmap.FindAction("New action", throwIfNotFound: true);
    }

    ~@PlayerInput()
    {
        UnityEngine.Debug.Assert(!m_MainCombatMap.enabled, "This will cause a leak and performance issues, PlayerInput.MainCombatMap.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Newactionmap.enabled, "This will cause a leak and performance issues, PlayerInput.Newactionmap.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainCombatMap
    private readonly InputActionMap m_MainCombatMap;
    private List<IMainCombatMapActions> m_MainCombatMapActionsCallbackInterfaces = new List<IMainCombatMapActions>();
    private readonly InputAction m_MainCombatMap_CursorPosition;
    private readonly InputAction m_MainCombatMap_CursorDelta;
    private readonly InputAction m_MainCombatMap_CursorMovement;
    private readonly InputAction m_MainCombatMap_CameraMovement;
    private readonly InputAction m_MainCombatMap_ConfirmAction;
    private readonly InputAction m_MainCombatMap_CancelAction;
    private readonly InputAction m_MainCombatMap_CameraDisplaceButton;
    public struct MainCombatMapActions
    {
        private @PlayerInput m_Wrapper;
        public MainCombatMapActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorPosition => m_Wrapper.m_MainCombatMap_CursorPosition;
        public InputAction @CursorDelta => m_Wrapper.m_MainCombatMap_CursorDelta;
        public InputAction @CursorMovement => m_Wrapper.m_MainCombatMap_CursorMovement;
        public InputAction @CameraMovement => m_Wrapper.m_MainCombatMap_CameraMovement;
        public InputAction @ConfirmAction => m_Wrapper.m_MainCombatMap_ConfirmAction;
        public InputAction @CancelAction => m_Wrapper.m_MainCombatMap_CancelAction;
        public InputAction @CameraDisplaceButton => m_Wrapper.m_MainCombatMap_CameraDisplaceButton;
        public InputActionMap Get() { return m_Wrapper.m_MainCombatMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainCombatMapActions set) { return set.Get(); }
        public void AddCallbacks(IMainCombatMapActions instance)
        {
            if (instance == null || m_Wrapper.m_MainCombatMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainCombatMapActionsCallbackInterfaces.Add(instance);
            @CursorPosition.started += instance.OnCursorPosition;
            @CursorPosition.performed += instance.OnCursorPosition;
            @CursorPosition.canceled += instance.OnCursorPosition;
            @CursorDelta.started += instance.OnCursorDelta;
            @CursorDelta.performed += instance.OnCursorDelta;
            @CursorDelta.canceled += instance.OnCursorDelta;
            @CursorMovement.started += instance.OnCursorMovement;
            @CursorMovement.performed += instance.OnCursorMovement;
            @CursorMovement.canceled += instance.OnCursorMovement;
            @CameraMovement.started += instance.OnCameraMovement;
            @CameraMovement.performed += instance.OnCameraMovement;
            @CameraMovement.canceled += instance.OnCameraMovement;
            @ConfirmAction.started += instance.OnConfirmAction;
            @ConfirmAction.performed += instance.OnConfirmAction;
            @ConfirmAction.canceled += instance.OnConfirmAction;
            @CancelAction.started += instance.OnCancelAction;
            @CancelAction.performed += instance.OnCancelAction;
            @CancelAction.canceled += instance.OnCancelAction;
            @CameraDisplaceButton.started += instance.OnCameraDisplaceButton;
            @CameraDisplaceButton.performed += instance.OnCameraDisplaceButton;
            @CameraDisplaceButton.canceled += instance.OnCameraDisplaceButton;
        }

        private void UnregisterCallbacks(IMainCombatMapActions instance)
        {
            @CursorPosition.started -= instance.OnCursorPosition;
            @CursorPosition.performed -= instance.OnCursorPosition;
            @CursorPosition.canceled -= instance.OnCursorPosition;
            @CursorDelta.started -= instance.OnCursorDelta;
            @CursorDelta.performed -= instance.OnCursorDelta;
            @CursorDelta.canceled -= instance.OnCursorDelta;
            @CursorMovement.started -= instance.OnCursorMovement;
            @CursorMovement.performed -= instance.OnCursorMovement;
            @CursorMovement.canceled -= instance.OnCursorMovement;
            @CameraMovement.started -= instance.OnCameraMovement;
            @CameraMovement.performed -= instance.OnCameraMovement;
            @CameraMovement.canceled -= instance.OnCameraMovement;
            @ConfirmAction.started -= instance.OnConfirmAction;
            @ConfirmAction.performed -= instance.OnConfirmAction;
            @ConfirmAction.canceled -= instance.OnConfirmAction;
            @CancelAction.started -= instance.OnCancelAction;
            @CancelAction.performed -= instance.OnCancelAction;
            @CancelAction.canceled -= instance.OnCancelAction;
            @CameraDisplaceButton.started -= instance.OnCameraDisplaceButton;
            @CameraDisplaceButton.performed -= instance.OnCameraDisplaceButton;
            @CameraDisplaceButton.canceled -= instance.OnCameraDisplaceButton;
        }

        public void RemoveCallbacks(IMainCombatMapActions instance)
        {
            if (m_Wrapper.m_MainCombatMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainCombatMapActions instance)
        {
            foreach (var item in m_Wrapper.m_MainCombatMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainCombatMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainCombatMapActions @MainCombatMap => new MainCombatMapActions(this);

    // New action map
    private readonly InputActionMap m_Newactionmap;
    private List<INewactionmapActions> m_NewactionmapActionsCallbackInterfaces = new List<INewactionmapActions>();
    private readonly InputAction m_Newactionmap_Newaction;
    public struct NewactionmapActions
    {
        private @PlayerInput m_Wrapper;
        public NewactionmapActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Newactionmap_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Newactionmap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NewactionmapActions set) { return set.Get(); }
        public void AddCallbacks(INewactionmapActions instance)
        {
            if (instance == null || m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(INewactionmapActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(INewactionmapActions instance)
        {
            if (m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INewactionmapActions instance)
        {
            foreach (var item in m_Wrapper.m_NewactionmapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_NewactionmapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public NewactionmapActions @Newactionmap => new NewactionmapActions(this);
    public interface IMainCombatMapActions
    {
        void OnCursorPosition(InputAction.CallbackContext context);
        void OnCursorDelta(InputAction.CallbackContext context);
        void OnCursorMovement(InputAction.CallbackContext context);
        void OnCameraMovement(InputAction.CallbackContext context);
        void OnConfirmAction(InputAction.CallbackContext context);
        void OnCancelAction(InputAction.CallbackContext context);
        void OnCameraDisplaceButton(InputAction.CallbackContext context);
    }
    public interface INewactionmapActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
